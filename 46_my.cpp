/*멀티태스킹(카카오 먹방 문제 변형)

정전이 발생한 시간K는 K번의 작업 처리 후 종료를 의미
Pseudo code
1. N 입력
2. N개의 수 입력
3. K입력
3. while(1) K만큼
	4.해당 원소가 0보다 크면
		5. if N == 0
			해당 인덱스 + 1 출력
			프로그램 종료
		6.그 원소 1 감소
		7.처리할 작업 수 K 1 감소
		
	5.pos = (i + 1) % 3
--------------------------------------------------------------------------
	(※여기서 정전이 발생한 경우를 처리하면 다시 원소가 0보다 큰 것을 순회하면서
	찾는 작업이 필요함)
*/
#include <iostream>
using namespace std;
int main() {
	int N, K, i;
	int tot = 0;
	int a[2001];
	cin >> N;
	for (i = 0; i < N; i++) {
		cin >> a[i];
		tot += a[i];
	}
	cin >> K;
	if (K >= tot) {
		cout << -1 << endl;
		return 0;
	}
	i = 0;
	while (1) {
		if (a[i] > 0) {
			if (K == 0) {
				cout << i + 1 << endl;
				return 0;
			}
			a[i]--;
			K--;
		}
		i = (i + 1) % N;
	}
}
/*숙지
문제1. 알고리즘 상 무한루프가 존재하고 타임 리밋이 나왔을 땐, 모든 경우에 대해 처리를 해주었는지에 대해 고민
이 문제에서 정전시간이 작업시간을 초과하는 경우에 대해선 처리하지 않았었음
이렇게 될 경우 배열의 모든 원소가 0이 됨. 이후 0보다 큰 원소를
찾아 출력할 때 해당하는 원소가 없어 무한루프에 빠지게 됨

문제2. 다른 타임리밋 문제(미해결)
K>=tot 예외 처리해줌
K<tot 인경우
어차피 K만큼만 비교하게됨
K는 1억이하이므로 타임리밋에 걸릴 이유가 없어보임.
*/
